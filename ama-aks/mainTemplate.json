{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "aksName": {
      "type": "string",
      "metadata": {
        "description": "AKS Cluster Name"
      }
    },
    "nodeSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "Node Size"
      }
    },
    "nodeCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Node Count"
      }
    },
    "crossTenant": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Manually set flag whether to use delegatedManagedIdentityResourceId or not in role assignments"
      }
    },
    "guidValue": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    }


  },
  "variables": {
    "adminUsername": "[concat('azureuser')]",
    "sshPublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDR3ELgvUalTKRVAPNoYEDyecX9QH4rTgPwWFuQ+b33/BBZDTGVwJtAZwCqASaGvc7Bmb3d4q/1Cyd7MHGV1rBD/UJvf4TfyVzQDk0q0DqV2oovlUI2CL9EOIGqN2c0Z4g6GvaPnMMwKSKpc2m4UiJgXPQcH2lwb7PDxrpTJTgP8F3iVX8yvH+zxw5KgN4K3K1D9K17OICo6vcaP2HB/cKRxQoDTEEBQAsglzeoXGzkP4yMwwV2uG4GhuG1urR8ZGKSfDohi67h2pgYLiRjQQ9LTRHTemCqreBIuyEOSPJNwrsIoS5xNqkdzeMzTr+1pL126c8cRgG8ENe7Qvrbqx3cVXK1Ezec4yYk1pCiGxu5x4P9WYmWcvjp/p1HZ3tuZyGYRAUx0KTqkm/TQJxxzWBoUTF6b6MNwIM6qW5N9NM7Q6nEghSWjZXaN/FXTN5OxVV5ygKUz2W5S5q8W3ySBKIec2Ee6M9kdFGzU6Qv9mGYpKU7/Ys2jBxYftQxw/fh2UoXRN69wwP+j4reAAbSJnlfFu6T5wUtlNEJAR5vYm6ek45FXeVzpU4nhzJqjdnrhsF7FSeSV/HXx1tl043me3X/qbB2nKF96T6kZLrAbzQUmecExahBIGJCLMbexMcFuii4nPz1wP0X2pT8EI2rfC8oSoxnf9SNHEcNHm6gB4RA5w== masalem@DESKTOP-S24FNT7",
    "logAnalyticsWorkspaceName": "[concat(parameters('aksName'),uniqueString(resourceGroup().id))]",
    "acrName": "[concat(parameters('aksName'),'acr')]",
    "identityName": "[concat(parameters('aksName'),'-identity')]",
    "nodeResourceGroup": "[concat(resourceGroup().name,'-aks-rg')]",
    "roleDefinitionOwner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
    "roleDefinitionManagedIdentityOperator": "f1a07417-d97a-45cb-824c-7a7467783830",
    "roleDefinitionVirtualMachineContributor": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
    "roleDefinitionMonitoringMetricsPublisher": "3913510d-42f4-4e42-8a64-420c390055eb",
    "helmLocation":  "[uri(deployment().properties.templateLink.uri, 'artifacts/helmchart.zip')]",
    "installHelmLocation":  "[uri(deployment().properties.templateLink.uri, 'artifacts/helm')]"
  },
  "resources": [
    {
      "comments": "*** Azure Marketplace required usage attribution tracking GUID ***",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "pid-5bd1b89d-241b-4d1d-bdae-53b24dc58043-partnercenter",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
          ]
        }
      }
    },
    {
      "comments": "*** Identity that will be used by bootstraping VM and will be assigned Owner role to the Managed Resource Group ***",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('identityName')]",
      "location": "[parameters('location')]"
    },
    {
      "comments": "*** Assign Owner role to the Managed Resource Group using cross-tenant delegatedManagedIdentityResourceId property ***",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2021-04-01-preview",
      "name": "[guid(resourceGroup().id, variables('identityName'), variables('roleDefinitionOwner'))]",
      "dependsOn": [
        "[variables('identityName')]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions',variables('roleDefinitionOwner'))]",
        "principalId": "[reference(variables('identityName')).principalId]",
        "principalType": "ServicePrincipal",
        "scope": "[resourceGroup().id]",
        "delegatedManagedIdentityResourceId": "[if(parameters('crossTenant'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName')), json('null'))]"
      }
    },
    {
      "comments": "*** Log Analytics workspace for AKS monitoring ***",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": 730,
        "workspaceCapping": {
          "dailyQuotaGb": -1
        }
      }
    },
    {
      "comments": "*** Logs Analytics ContainerInsights Solution for AKS ***",
      "type": "Microsoft.OperationsManagement/solutions",
      "apiVersion": "2015-11-01-preview",
      "name": "[concat('ContainerInsights', '(', variables('logAnalyticsWorkspaceName'), ')')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('logAnalyticsWorkspaceName')]"
      ],
      "plan": {
        "name": "[concat('ContainerInsights', '(', variables('logAnalyticsWorkspaceName'), ')')]",
        "product": "OMSGallery/ContainerInsights",
        "promotionCode": "",
        "publisher": "Microsoft"
      },
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      }
    },
    {
      "comments": "*** AKS cluster with custom-named nodeResourceGroup and system assigned managed identity ***",
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2021-10-01",
      "location": "[parameters('location')]",
      "name": "[parameters('aksName')]",
      "dependsOn": [
        "[variables('logAnalyticsWorkspaceName')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "nodeResourceGroup": "[variables('nodeResourceGroup')]",
        "dnsPrefix": "[parameters('aksName')]",
        "enableRBAC": true,
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "count": "[parameters('nodeCount')]",
            "vmSize": "[parameters('nodeSize')]",
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "type": "VirtualMachineScaleSets",
            "mode": "System"
          }
        ],
        "linuxProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[variables('sshPublicKey')]"
              }
            ]
          }
        },
        "networkProfile": {
          "loadBalancerSku": "standard",
          "outboundType": "loadBalancer"
        },
        "apiServerAccessProfile": {
          "enablePrivateCluster": false
        },
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": false
          },
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      }
    },
    {
      "comments": "*** Monitoring Metrics Publisher Role Assignment to AKS for Container Insights ***",
      "type": "Microsoft.ContainerService/managedClusters/providers/roleAssignments",
      "apiVersion": "2021-04-01-preview",
      "name": "[concat(parameters('aksName'),'/Microsoft.Authorization/',guid(resourceGroup().id, parameters('aksName'), variables('roleDefinitionMonitoringMetricsPublisher')))]",
      "dependsOn": [
        "[parameters('aksName')]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions',variables('roleDefinitionMonitoringMetricsPublisher'))]",
        "principalId": "[reference(parameters('aksName'),'2020-03-01','Full').properties.addonProfiles.omsagent.identity.objectId]",
        "principalType": "ServicePrincipal",
        "scope": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksName'))]",
        "delegatedManagedIdentityResourceId": "[if(parameters('crossTenant'), reference(parameters('aksName'),'2020-03-01','Full').properties.addonProfiles.omsagent.identity.resourceId, json('null'))]"
      }
    },
    {
      "comments": "*** After creating the AKS resource, wait via sleep for up to 20+ minutes to make sure that AMA RP role assignment is properly applied to the AKS Node Resource Group and not receive intermittent Forbidden error from ARM ***",
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "sleep-after-aks",
      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "dependsOn": [
        "[parameters('aksName')]"
      ],
      "properties": {
        "azCliVersion": "2.32.0",
        "scriptContent": "sleep 1200",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "PT4H",
        "timeout": "PT2H"
      }
    },
    {
      "comments": "*** After AKS cluster gets deployed plus a delay of 20+ minutes to make sure AMA RP gets proper permissions, use inner-scope nested template to get AKS managed identity resourceId and principalId ***",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "get-aks-mi",
      "resourceGroup": "[variables('nodeResourceGroup')]",
      "dependsOn": [
        "[parameters('aksName')]",
        "sleep-after-aks"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "aksMiResourceId": {
            "value": "[reference(parameters('aksName'),'2021-10-01','Full').properties.identityProfile.kubeletIdentity.resourceId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "aksMiResourceId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "variables": {},
          "resources": [],
          "outputs": {
            "aksMiResourceId": {
              "type": "string",
              "value": "[parameters('aksMiResourceId')]"
            },
            "aksMiPrincipalId": {
              "type": "string",
              "value": "[reference(parameters('aksMiResourceId'),'2018-11-30','Full').properties.principalId]"
            }
          }
        }
      }
    },
    {
      "comments": "*** Nested cross-resource-group role assignment to the AKS Node Resource Group ***",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[concat('ra-',guid(resourceGroup().id))]",
      "resourceGroup": "[variables('nodeResourceGroup')]",
      "dependsOn": [
        "[variables('identityName')]",
        "[parameters('aksName')]",
        "get-aks-mi"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "comments": "*** Assign Owner role to the user assigned identity cross-tenant ***",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "name": "[guid(variables('nodeResourceGroup'), variables('identityName'), variables('roleDefinitionOwner'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions',variables('roleDefinitionOwner'))]",
                "principalId": "[reference(variables('identityName')).principalId]",
                "principalType": "ServicePrincipal",
                "scope": "[concat(subscription().id,'/resourceGroups/',variables('nodeResourceGroup'))]",
                "delegatedManagedIdentityResourceId": "[if(parameters('crossTenant'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName')), json('null'))]"
              }
            },
            {
              "comments": "*** Assign Managed Identity Operator role to AKS' managed identity cross-tenant (for Pod Identity) ***",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "name": "[guid(variables('nodeResourceGroup'), 'aksmi', variables('roleDefinitionManagedIdentityOperator'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions',variables('roleDefinitionManagedIdentityOperator'))]",
                "principalId": "[reference('get-aks-mi','2019-10-01').outputs.aksMiPrincipalId.value]",
                "principalType": "ServicePrincipal",
                "scope": "[concat(subscription().id,'/resourceGroups/',variables('nodeResourceGroup'))]",
                "delegatedManagedIdentityResourceId": "[if(parameters('crossTenant'), reference('get-aks-mi','2019-10-01').outputs.aksMiResourceId.value, json('null'))]"
              }
            },
            {
              "comments": "*** Assign Virtual Machine Operator role to AKS' managed identity cross-tenant (for Pod Identity) ***",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "name": "[guid(variables('nodeResourceGroup'), 'aksvmo', variables('roleDefinitionVirtualMachineContributor'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions',variables('roleDefinitionVirtualMachineContributor'))]",
                "principalId": "[reference('get-aks-mi','2019-10-01').outputs.aksMiPrincipalId.value]",
                "principalType": "ServicePrincipal",
                "scope": "[concat(subscription().id,'/resourceGroups/',variables('nodeResourceGroup'))]",
                "delegatedManagedIdentityResourceId": "[if(parameters('crossTenant'), reference('get-aks-mi','2019-10-01').outputs.aksMiResourceId.value, json('null'))]"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2019-12-01-preview",
      "name": "[variables('acrName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Container Registry",
        "container.registry": "[variables('acrName')]"
      },
      "sku": {
        "name": "basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
            "name": "ConnectAKStoACR-a8ef7952-3915-4c94-a530-0d3f0a26a03a",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",

            "dependsOn": [
                "[parameters('aksName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "2018-09-01-preview",
                            "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
                            "name": "[concat(variables('acrName'), '/Microsoft.Authorization/', parameters('guidValue'))]",
                            "properties": {
                                "principalId": "[reference(parameters('aksName'), '2021-07-01').identityProfile.kubeletidentity.objectId]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                                "scope": "[resourceId(ResourceGroup().name,'Microsoft.ContainerRegistry/registries/', variables('acrName'))]"
                            }
                        }
                    ]
                }
            }
    },


    {
      "comments": "*** After creating the AKS resource, Import Images ***",
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "ImportContainerImages",
      "identity": {
          "type": "userAssigned",
          "userAssignedIdentities": {
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {}
          }
        },
      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "dependsOn": [
        "[parameters('aksName')]",
        "sleep-after-aks",
        "[variables('acrName')]"
      ],
      "properties": {
        "azCliVersion": "2.32.0",
        "scriptContent": "[concat('az login --identity; az acr import --name ', variables('acrName'), ' --source  ISV-ACR.azurecr.io/nodejstodo:v3 --image nodejstodo:v3  -u ISV-ACR -p ISV-ACR-PASSWORD  ; az acr import --name ', variables('acrName'), ' --source  ISV-ACR.azurecr.io/mongo:latest --image mongo:latest  -u ISV-ACR -p ISV-ACR-PASSWORD')]",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "PT4H",
        "timeout": "PT2H"
      }
    },
    {
      "comments": "*** After creating the AKS resource, Import Images ***",
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "RunDeployment",
      "identity": {
          "type": "userAssigned",
          "userAssignedIdentities": {
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {}
          }
        },

      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "dependsOn": [
        "[parameters('aksName')]",
        "sleep-after-aks",
        "ImportContainerImages",
        "[variables('acrName')]"

      ],
      "properties": {
        "azCliVersion": "2.32.0",
        "scriptContent": "[concat('cp ./helm /usr/local/bin/helm;unzip helmchart.zip -d akshelm;az aks get-credentials --resource-group ',resourceGroup().name ,' --name ',parameters('aksName') ,' --admin; helm install todoapp --set-string frontendImage=',variables('acrName'),'.azurecr.io/nodejstodo:v3 --set-string backendImage=',variables('acrName'),'.azurecr.io/mongo:latest ./akshelm')]",
        "supportingScriptUris":[
                  "[variables('helmLocation')]",
                  "[variables('installHelmLocation')]"
                    ],
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "PT4H",
        "timeout": "PT2H"
      }
    }
    

  ],
  "outputs": {
    "aksName": {
      "type": "string",
      "value": "[parameters('aksName')]"
    },
    "aksFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters/', parameters('aksName'))).fqdn]"
    },
    "managedResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().id]"
    },
    "userAssignedIdentity": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
    },
    "subscription": {
      "type": "object",
      "value": "[subscription()]"
    }
  }
}
